scalar JSON

type User {
  email: String!
  username: String!
  fullName: String!
}

type Me {
  id: ID!
  email: String!
  username: String!
  fullName: String!
  profession: String!
  gender: String!
  address: String!
  country: String!
  date: String!
  scores: [Int]!
  age: Int!
  phone: String!
  apiKey: String!
  familyInfo: FamilyInfo!
}

type FamilyInfo {
  father: User!
  mother: User!
  brothers: [User]!
}

# MUTATIONS

# Create a new User
input UserInput {
  email: String!
  username: String!
  fullName: String!
  password: String!
}
# Login
input LoginInput {
  email: String!
  password: String!
}
# Update password
input UpdatePasswordInput {
  oldPassword: String!
  newPassword: String!
}

type Query {
  getMe: Me
  getUserByUsername(username: String!): User
}

type Mutation {
  createUser(input: UserInput!): User
  login(input: LoginInput!): Me
  updatePassword(input: UpdatePasswordInput!): Me
}
